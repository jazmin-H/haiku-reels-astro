---
import { SITE_TITLE, SITE_DESCRIPTION } from "../config/consts"; // Puedes mantener esta importación si estás usando las constantes en otro lugar
import "../styles/global.css";

export interface Props {
	title?: string;
	description?: string;
}

const { title = SITE_TITLE, description = SITE_DESCRIPTION }: Props = Astro.props;

// Construir las URLs base para los recursos estáticos
const base = "/haiku-reels-astro"; // Usa el valor de base configurado
const appleTouchIconUrl = `${base}/apple-touch-icon.png`;
const favicon32x32Url = `${base}/favicon-32x32.png`;
const favicon16x16Url = `${base}/favicon-16x16.png`;
const favicon = `${base}/favicon.ico`;
const siteWebmanifestUrl = `${base}/site.webmanifest`;
---

<!doctype html>
<html lang="es">
	<head>
		<!-- Primary Meta Tags -->
		<title>{title}</title>
		<meta name="title" content={title} />
		<meta name="description" content={description} />
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<!-- Favicon -->
		<link rel="apple-touch-icon" sizes="180x180" href={appleTouchIconUrl} />
		<link rel="icon" type="image/png" sizes="32x32" href={favicon32x32Url} />
		<link rel="icon" type="image/png" sizes="16x16" href={favicon16x16Url} />
		<link rel="icon" type="image/ico" href={favicon} />
		<link rel="manifest" href={siteWebmanifestUrl} />
		<!-- theme color for mobile -->
		<meta name="theme-color" />
		<!-- matter-wrap -->
	</head>
	<body><slot /></body>

	<script>
		const establecerTemaClaroPorDefectoSiNoHayTemaAlmacenado = (): void => {
			const colorParaElDecoradorEnElTemaClaro = "#312e81";
			const temaActual = localStorage.getItem("theme");
			if (!temaActual || temaActual === "light") {
				localStorage.setItem("theme", "light");
				document.documentElement.classList.remove("dark");
				document
					.querySelector("meta[name=theme-color]")
					?.setAttribute("content", colorParaElDecoradorEnElTemaClaro);
			}
		};

		const establecerTemaOscuroSiEsteSeEncuentraAlmacenado = (): void => {
			const colorParaElDecoradorEnElTemaOscuro = "#FBE2D0";
			const temaActual = localStorage.getItem("theme");
			if (temaActual === "dark") {
				document.documentElement.classList.add("dark");
				document
					.querySelector("meta[name=theme-color]")
					?.setAttribute("content", colorParaElDecoradorEnElTemaOscuro);
			}
		};

		establecerTemaClaroPorDefectoSiNoHayTemaAlmacenado();
		establecerTemaOscuroSiEsteSeEncuentraAlmacenado();
	</script>
</html>
