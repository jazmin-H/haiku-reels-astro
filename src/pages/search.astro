---
// src/pages/haikus.astro
import "../styles/global.css";
import HaikuProse from "@components/haiku-prose.astro";
import HtmlLayout from "@layouts/basic-layout.astro";
import HaikusLayout from "@layouts/haikus-layout.astro";
import HaikuMenu from "@components/haiku-menu.astro";
import HaikuSection from "@components/haiku-section.astro";
---

<HtmlLayout>
	<HaikusLayout>
		<HaikuSection>
			<div class="relative w-[100%] h-[10%]">
			  <div class="flex items-center p-2 bg-atomic_tangerine rounded-full absolute top-4 mx-2 w-[80%] h-[72%] z-10 dark:bg-rose_gold">
				<button id="search-b">
				  <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" viewBox="0 0 512 512">
					<path
					  d="M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z"
					  class="h-10 w-10 text-delft_blue ml-2 dark:text-pinky_cream"
					  fill="currentColor" />
				  </svg>
				</button>
				<input
				  id="s-input"
				  type="text"
				  placeholder="Buscar..."
				  class="ml-2 bg-transparent focus:outline-none text-delft_blue placeholder-delft_blue w-full h-full text-[3rem] md:text-[1rem] dark:text-pinky_cream dark:placeholder-pinky_cream"
				/>
			  </div>
	  
			  <HaikuMenu />
			</div>
			<div class="max-h-[480px] overflow-y-auto p-1 rounded-xl scrollbar dark:scrollbar-dark">
			  <div id="results-container"></div>
			</div>
		</HaikuSection>
		<script is:inline>
			document.getElementById("search-b")?.addEventListener("click", () => {
				const inputElement = document.getElementById("s-input");
				const value = inputElement?.value.trim().toLowerCase();
				if (value === "") {
					resultsContainer.innerHTML = `<p class="text-atomic_tangerine dark:text-rose_gold">No se encontraron resultados.</p>`;
					return;  // Verifica si el HTML se inyecta correctamente

				}
				fetch("/haiku-reels-astro/data/haikus.json").then((response) => (
					response.json()
				)).then((data) => {
					const filteredHaikus = data.haikus.filter(item => {
						return item.autoria.toLowerCase().includes(value);
					});
					console.log(filteredHaikus);
					renderHaikus(filteredHaikus);
				});
			});
			
			function renderHaikus(haikus) {
				const resultsContainer = document.getElementById("results-container");
				resultsContainer.innerHTML = "";
				if (haikus.length === 0) {
					resultsContainer.innerHTML = `<p class="text-atomic_tangerine dark:text-rose_gold">No se encontraron resultados.</p>`;
					return;
				}
				
				const haikusRenders = haikus.map((haiku, index) => {
					const { autoria, pubDate, content } = haiku;
					return `
					<div class="pt-2 pl-3 pr-3 pb-3 md:mr-8 ml-0 mt-4 bg-atomic_tangerine dark:bg-rose_gold rounded-3xl border-4 border-delft_blue dark:border-pinky_cream shadow-xl hover:shadow-2xl transition-shadow duration-300">
						<div class="mt-4 text-lg text-delft_blue dark:text-pinky_cream leading-relaxed">
							<h3>${autoria}</h3>
							<p class="text-s"><strong>Fecha de publicaci√≥n:</strong> ${pubDate}</p>
							<div class="content">${content}</div>
						</div>
					</div>
					`;
				});

				resultsContainer.innerHTML = `
					<div class="haikus-layout">
						${haikusRenders.join('')}
					</div>
				`;
			}
		</script>
	</HaikusLayout>
</HtmlLayout>
